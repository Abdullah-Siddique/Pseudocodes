BFS refers to Breadth-First Search and we can defiene it thus 
an algorithm for traversing or searching tree or graph data structures. 
It starts at a specified node and explores all its neighbors at the present 
depth level before moving on to nodes at the next depth level.

Pseudocode:
BFS(graph, start):
    create a queue
    enqueue start
    mark start as visited
    while queue is not empty:
        current = dequeue from the queue
        for each neighbor of current:
            if neighbor is not visited:
                mark neighbor as visited
                enqueue neighbor

Visualization:

    A
   / \
  B   C
 /     \
D       E

Nodes: A, B, C, D, E

Edges:
A to B
A to C
B to D
C to E

Start at Node A:
Enqueue A.
Mark A as visited.

Dequeue A:
Enqueue B and C (neighbors of A).

Dequeue B:
Enqueue D (neighbor of B).

Dequeue C:
Enqueue E (neighbor of C).

Dequeue D:
D has no new neighbors.

Dequeue E:
E has no new neighbors.

Order of Visit: A, B, C, D, E
